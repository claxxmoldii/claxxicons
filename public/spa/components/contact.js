/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_style,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let section;
	let div19;
	let div0;
	let h2;
	let t0;
	let t1;
	let h3;
	let t2;
	let t3;
	let form;
	let div12;
	let div8;
	let div2;
	let input0;
	let t4;
	let div1;
	let t5;
	let t6;
	let div5;
	let input1;
	let t7;
	let div3;
	let t8;
	let t9;
	let div4;
	let t10;
	let t11;
	let div7;
	let input2;
	let t12;
	let div6;
	let t13;
	let t14;
	let div11;
	let div10;
	let textarea;
	let t15;
	let div9;
	let t16;
	let t17;
	let div15;
	let div14;
	let div13;
	let t18;
	let t19;
	let br;
	let t20;
	let a;
	let t21;
	let t22;
	let div17;
	let div16;
	let t23;
	let t24;
	let div18;
	let button;
	let t25;

	return {
		c() {
			section = element("section");
			div19 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("Contact Us");
			t1 = space();
			h3 = element("h3");
			t2 = text("Lorem ipsum dolor sit amet consectetur.");
			t3 = space();
			form = element("form");
			div12 = element("div");
			div8 = element("div");
			div2 = element("div");
			input0 = element("input");
			t4 = space();
			div1 = element("div");
			t5 = text("A name is required.");
			t6 = space();
			div5 = element("div");
			input1 = element("input");
			t7 = space();
			div3 = element("div");
			t8 = text("An email is required.");
			t9 = space();
			div4 = element("div");
			t10 = text("Email is not valid.");
			t11 = space();
			div7 = element("div");
			input2 = element("input");
			t12 = space();
			div6 = element("div");
			t13 = text("A phone number is required.");
			t14 = space();
			div11 = element("div");
			div10 = element("div");
			textarea = element("textarea");
			t15 = space();
			div9 = element("div");
			t16 = text("A message is required.");
			t17 = space();
			div15 = element("div");
			div14 = element("div");
			div13 = element("div");
			t18 = text("Form submission successful!");
			t19 = text("\n              To activate this form, sign up at\n              ");
			br = element("br");
			t20 = space();
			a = element("a");
			t21 = text("https://startbootstrap.com/solution/contact-forms");
			t22 = space();
			div17 = element("div");
			div16 = element("div");
			t23 = text("Error sending message!");
			t24 = space();
			div18 = element("div");
			button = element("button");
			t25 = text("Send Message");
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true, id: true, style: true });
			var section_nodes = children(section);
			div19 = claim_element(section_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div0 = claim_element(div19_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Contact Us");
			h2_nodes.forEach(detach);
			t1 = claim_space(div0_nodes);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, "Lorem ipsum dolor sit amet consectetur.");
			h3_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t3 = claim_space(div19_nodes);
			form = claim_element(div19_nodes, "FORM", { id: true, "data-sb-form-api-token": true });
			var form_nodes = children(form);
			div12 = claim_element(form_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div8 = claim_element(div12_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			div2 = claim_element(div8_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);

			input0 = claim_element(div2_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true,
				"data-sb-validations": true
			});

			t4 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true, "data-sb-feedback": true });
			var div1_nodes = children(div1);
			t5 = claim_text(div1_nodes, "A name is required.");
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			t6 = claim_space(div8_nodes);
			div5 = claim_element(div8_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);

			input1 = claim_element(div5_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true,
				"data-sb-validations": true
			});

			t7 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true, "data-sb-feedback": true });
			var div3_nodes = children(div3);
			t8 = claim_text(div3_nodes, "An email is required.");
			div3_nodes.forEach(detach);
			t9 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true, "data-sb-feedback": true });
			var div4_nodes = children(div4);
			t10 = claim_text(div4_nodes, "Email is not valid.");
			div4_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			t11 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);

			input2 = claim_element(div7_nodes, "INPUT", {
				class: true,
				id: true,
				type: true,
				placeholder: true,
				"data-sb-validations": true
			});

			t12 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true, "data-sb-feedback": true });
			var div6_nodes = children(div6);
			t13 = claim_text(div6_nodes, "A phone number is required.");
			div6_nodes.forEach(detach);
			div7_nodes.forEach(detach);
			div8_nodes.forEach(detach);
			t14 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			div10 = claim_element(div11_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);

			textarea = claim_element(div10_nodes, "TEXTAREA", {
				class: true,
				id: true,
				placeholder: true,
				"data-sb-validations": true
			});

			children(textarea).forEach(detach);
			t15 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true, "data-sb-feedback": true });
			var div9_nodes = children(div9);
			t16 = claim_text(div9_nodes, "A message is required.");
			div9_nodes.forEach(detach);
			div10_nodes.forEach(detach);
			div11_nodes.forEach(detach);
			div12_nodes.forEach(detach);
			t17 = claim_space(form_nodes);
			div15 = claim_element(form_nodes, "DIV", { class: true, id: true });
			var div15_nodes = children(div15);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			t18 = claim_text(div13_nodes, "Form submission successful!");
			div13_nodes.forEach(detach);
			t19 = claim_text(div14_nodes, "\n              To activate this form, sign up at\n              ");
			br = claim_element(div14_nodes, "BR", {});
			t20 = claim_space(div14_nodes);
			a = claim_element(div14_nodes, "A", { href: true });
			var a_nodes = children(a);
			t21 = claim_text(a_nodes, "https://startbootstrap.com/solution/contact-forms");
			a_nodes.forEach(detach);
			div14_nodes.forEach(detach);
			div15_nodes.forEach(detach);
			t22 = claim_space(form_nodes);
			div17 = claim_element(form_nodes, "DIV", { class: true, id: true });
			var div17_nodes = children(div17);
			div16 = claim_element(div17_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			t23 = claim_text(div16_nodes, "Error sending message!");
			div16_nodes.forEach(detach);
			div17_nodes.forEach(detach);
			t24 = claim_space(form_nodes);
			div18 = claim_element(form_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			button = claim_element(div18_nodes, "BUTTON", { class: true, id: true, type: true });
			var button_nodes = children(button);
			t25 = claim_text(button_nodes, "Send Message");
			button_nodes.forEach(detach);
			div18_nodes.forEach(detach);
			form_nodes.forEach(detach);
			div19_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h2, "class", "section-heading text-uppercase");
			attr(h3, "class", "section-subheading text-muted");
			attr(div0, "class", "text-center");
			attr(input0, "class", "form-control");
			attr(input0, "id", "name");
			attr(input0, "type", "text");
			attr(input0, "placeholder", "Your Name *");
			attr(input0, "data-sb-validations", "required");
			attr(div1, "class", "invalid-feedback");
			attr(div1, "data-sb-feedback", "name:required");
			attr(div2, "class", "form-group");
			attr(input1, "class", "form-control");
			attr(input1, "id", "email");
			attr(input1, "type", "email");
			attr(input1, "placeholder", "Your Email *");
			attr(input1, "data-sb-validations", "required,email");
			attr(div3, "class", "invalid-feedback");
			attr(div3, "data-sb-feedback", "email:required");
			attr(div4, "class", "invalid-feedback");
			attr(div4, "data-sb-feedback", "email:email");
			attr(div5, "class", "form-group");
			attr(input2, "class", "form-control");
			attr(input2, "id", "phone");
			attr(input2, "type", "tel");
			attr(input2, "placeholder", "Your Phone *");
			attr(input2, "data-sb-validations", "required");
			attr(div6, "class", "invalid-feedback");
			attr(div6, "data-sb-feedback", "phone:required");
			attr(div7, "class", "form-group mb-md-0");
			attr(div8, "class", "col-md-6");
			attr(textarea, "class", "form-control");
			attr(textarea, "id", "message");
			attr(textarea, "placeholder", "Your Message *");
			attr(textarea, "data-sb-validations", "required");
			attr(div9, "class", "invalid-feedback");
			attr(div9, "data-sb-feedback", "message:required");
			attr(div10, "class", "form-group form-group-textarea mb-md-0");
			attr(div11, "class", "col-md-6");
			attr(div12, "class", "row align-items-stretch mb-5");
			attr(div13, "class", "fw-bolder");
			attr(a, "href", "https://startbootstrap.com/solution/contact-forms");
			attr(div14, "class", "text-center text-white mb-3");
			attr(div15, "class", "d-none");
			attr(div15, "id", "submitSuccessMessage");
			attr(div16, "class", "text-center text-danger mb-3");
			attr(div17, "class", "d-none");
			attr(div17, "id", "submitErrorMessage");
			attr(button, "class", "btn btn-primary btn-xl text-uppercase disabled");
			attr(button, "id", "submitButton");
			attr(button, "type", "submit");
			attr(div18, "class", "text-center");
			attr(form, "id", "contactForm");
			attr(form, "data-sb-form-api-token", "API_TOKEN");
			attr(div19, "class", "container");
			attr(section, "class", "page-section");
			attr(section, "id", "contact");
			set_style(section, "background-image", "url(" + /*bgimage*/ ctx[0] + ")");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div19);
			append(div19, div0);
			append(div0, h2);
			append(h2, t0);
			append(div0, t1);
			append(div0, h3);
			append(h3, t2);
			append(div19, t3);
			append(div19, form);
			append(form, div12);
			append(div12, div8);
			append(div8, div2);
			append(div2, input0);
			append(div2, t4);
			append(div2, div1);
			append(div1, t5);
			append(div8, t6);
			append(div8, div5);
			append(div5, input1);
			append(div5, t7);
			append(div5, div3);
			append(div3, t8);
			append(div5, t9);
			append(div5, div4);
			append(div4, t10);
			append(div8, t11);
			append(div8, div7);
			append(div7, input2);
			append(div7, t12);
			append(div7, div6);
			append(div6, t13);
			append(div12, t14);
			append(div12, div11);
			append(div11, div10);
			append(div10, textarea);
			append(div10, t15);
			append(div10, div9);
			append(div9, t16);
			append(form, t17);
			append(form, div15);
			append(div15, div14);
			append(div14, div13);
			append(div13, t18);
			append(div14, t19);
			append(div14, br);
			append(div14, t20);
			append(div14, a);
			append(a, t21);
			append(form, t22);
			append(form, div17);
			append(div17, div16);
			append(div16, t23);
			append(form, t24);
			append(form, div18);
			append(div18, button);
			append(button, t25);
		},
		p(ctx, [dirty]) {
			if (dirty & /*bgimage*/ 1) {
				set_style(section, "background-image", "url(" + /*bgimage*/ ctx[0] + ")");
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { bgimage = "../assets/img/map-image.png" } = $$props;

	$$self.$$set = $$props => {
		if ("bgimage" in $$props) $$invalidate(0, bgimage = $$props.bgimage);
	};

	return [bgimage];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { bgimage: 0 });
	}
}

export default Component;