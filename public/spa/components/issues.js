/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let section;
	let div16;
	let div0;
	let h2;
	let t0;
	let t1;
	let h30;
	let t2;
	let t3;
	let ul;
	let li0;
	let div3;
	let div1;
	let h31;
	let t4;
	let t5;
	let h40;
	let t6;
	let t7;
	let div2;
	let p0;
	let t8;
	let t9;
	let li1;
	let div6;
	let div4;
	let h32;
	let t10;
	let t11;
	let h41;
	let t12;
	let t13;
	let div5;
	let p1;
	let t14;
	let t15;
	let li2;
	let div9;
	let div7;
	let h33;
	let t16;
	let t17;
	let h42;
	let t18;
	let t19;
	let div8;
	let p2;
	let t20;
	let t21;
	let li3;
	let div12;
	let div10;
	let h34;
	let t22;
	let t23;
	let div11;
	let p3;
	let a0;
	let t24;
	let t25;
	let li4;
	let div15;
	let div13;
	let h35;
	let t26;
	let t27;
	let div14;
	let p4;
	let a1;
	let t28;

	return {
		c() {
			section = element("section");
			div16 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("issues...");
			t1 = space();
			h30 = element("h3");
			t2 = text("these things are wonky...");
			t3 = space();
			ul = element("ul");
			li0 = element("li");
			div3 = element("div");
			div1 = element("div");
			h31 = element("h3");
			t4 = text("nav links need a second click...");
			t5 = space();
			h40 = element("h4");
			t6 = text("yikes...");
			t7 = space();
			div2 = element("div");
			p0 = element("p");
			t8 = text("clicking on a nav link first takes you to the top, then a second click on the same link, scrolls you down to the '#link'");
			t9 = space();
			li1 = element("li");
			div6 = element("div");
			div4 = element("div");
			h32 = element("h3");
			t10 = text("how to npm bootstrap and fontawesome");
			t11 = space();
			h41 = element("h4");
			t12 = text("how do we scaffold that in plenti");
			t13 = space();
			div5 = element("div");
			p1 = element("p");
			t14 = text("how does plenti or go scaffold npm modules?");
			t15 = space();
			li2 = element("li");
			div9 = element("div");
			div7 = element("div");
			h33 = element("h3");
			t16 = text("would you accept this template as a plenti theme?");
			t17 = space();
			h42 = element("h4");
			t18 = text("it needs some more work");
			t19 = space();
			div8 = element("div");
			p2 = element("p");
			t20 = text("i feel like i should attribute a link to the original theme");
			t21 = space();
			li3 = element("li");
			div12 = element("div");
			div10 = element("div");
			h34 = element("h3");
			t22 = text("live surge deploy");
			t23 = space();
			div11 = element("div");
			p3 = element("p");
			a0 = element("a");
			t24 = text("surge");
			t25 = space();
			li4 = element("li");
			div15 = element("div");
			div13 = element("div");
			h35 = element("h3");
			t26 = text("github repo...");
			t27 = space();
			div14 = element("div");
			p4 = element("p");
			a1 = element("a");
			t28 = text("github");
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true, id: true });
			var section_nodes = children(section);
			div16 = claim_element(section_nodes, "DIV", { class: true });
			var div16_nodes = children(div16);
			div0 = claim_element(div16_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "issues...");
			h2_nodes.forEach(detach);
			t1 = claim_space(div0_nodes);
			h30 = claim_element(div0_nodes, "H3", { class: true });
			var h30_nodes = children(h30);
			t2 = claim_text(h30_nodes, "these things are wonky...");
			h30_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t3 = claim_space(div16_nodes);
			ul = claim_element(div16_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", {});
			var li0_nodes = children(li0);
			div3 = claim_element(li0_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			h31 = claim_element(div1_nodes, "H3", {});
			var h31_nodes = children(h31);
			t4 = claim_text(h31_nodes, "nav links need a second click...");
			h31_nodes.forEach(detach);
			t5 = claim_space(div1_nodes);
			h40 = claim_element(div1_nodes, "H4", { class: true });
			var h40_nodes = children(h40);
			t6 = claim_text(h40_nodes, "yikes...");
			h40_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			t7 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			p0 = claim_element(div2_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t8 = claim_text(p0_nodes, "clicking on a nav link first takes you to the top, then a second click on the same link, scrolls you down to the '#link'");
			p0_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t9 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", {});
			var li1_nodes = children(li1);
			div6 = claim_element(li1_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			h32 = claim_element(div4_nodes, "H3", {});
			var h32_nodes = children(h32);
			t10 = claim_text(h32_nodes, "how to npm bootstrap and fontawesome");
			h32_nodes.forEach(detach);
			t11 = claim_space(div4_nodes);
			h41 = claim_element(div4_nodes, "H4", { class: true });
			var h41_nodes = children(h41);
			t12 = claim_text(h41_nodes, "how do we scaffold that in plenti");
			h41_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			t13 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			p1 = claim_element(div5_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t14 = claim_text(p1_nodes, "how does plenti or go scaffold npm modules?");
			p1_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			div6_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t15 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", {});
			var li2_nodes = children(li2);
			div9 = claim_element(li2_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			h33 = claim_element(div7_nodes, "H3", {});
			var h33_nodes = children(h33);
			t16 = claim_text(h33_nodes, "would you accept this template as a plenti theme?");
			h33_nodes.forEach(detach);
			t17 = claim_space(div7_nodes);
			h42 = claim_element(div7_nodes, "H4", { class: true });
			var h42_nodes = children(h42);
			t18 = claim_text(h42_nodes, "it needs some more work");
			h42_nodes.forEach(detach);
			div7_nodes.forEach(detach);
			t19 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			p2 = claim_element(div8_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t20 = claim_text(p2_nodes, "i feel like i should attribute a link to the original theme");
			p2_nodes.forEach(detach);
			div8_nodes.forEach(detach);
			div9_nodes.forEach(detach);
			li2_nodes.forEach(detach);
			t21 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", {});
			var li3_nodes = children(li3);
			div12 = claim_element(li3_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			div10 = claim_element(div12_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			h34 = claim_element(div10_nodes, "H3", {});
			var h34_nodes = children(h34);
			t22 = claim_text(h34_nodes, "live surge deploy");
			h34_nodes.forEach(detach);
			div10_nodes.forEach(detach);
			t23 = claim_space(div12_nodes);
			div11 = claim_element(div12_nodes, "DIV", { class: true });
			var div11_nodes = children(div11);
			p3 = claim_element(div11_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			a0 = claim_element(p3_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			t24 = claim_text(a0_nodes, "surge");
			a0_nodes.forEach(detach);
			p3_nodes.forEach(detach);
			div11_nodes.forEach(detach);
			div12_nodes.forEach(detach);
			li3_nodes.forEach(detach);
			t25 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", {});
			var li4_nodes = children(li4);
			div15 = claim_element(li4_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div13 = claim_element(div15_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			h35 = claim_element(div13_nodes, "H3", {});
			var h35_nodes = children(h35);
			t26 = claim_text(h35_nodes, "github repo...");
			h35_nodes.forEach(detach);
			div13_nodes.forEach(detach);
			t27 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			p4 = claim_element(div14_nodes, "P", { class: true });
			var p4_nodes = children(p4);
			a1 = claim_element(p4_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			t28 = claim_text(a1_nodes, "github");
			a1_nodes.forEach(detach);
			p4_nodes.forEach(detach);
			div14_nodes.forEach(detach);
			div15_nodes.forEach(detach);
			li4_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			div16_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h2, "class", "section-heading text-uppercase");
			attr(h30, "class", "section-subheading text-muted");
			attr(div0, "class", "text-center");
			attr(h40, "class", "subheading");
			attr(div1, "class", "timeline-heading");
			attr(p0, "class", "text-muted");
			attr(div2, "class", "timeline-body");
			attr(div3, "class", "timeline-panel");
			attr(h41, "class", "subheading");
			attr(div4, "class", "timeline-heading");
			attr(p1, "class", "text-muted");
			attr(div5, "class", "timeline-body");
			attr(div6, "class", "timeline-panel");
			attr(h42, "class", "subheading");
			attr(div7, "class", "timeline-heading");
			attr(p2, "class", "text-muted");
			attr(div8, "class", "timeline-body");
			attr(div9, "class", "timeline-panel");
			attr(div10, "class", "timeline-heading");
			attr(a0, "href", "");
			attr(p3, "class", "text-muted");
			attr(div11, "class", "timeline-body");
			attr(div12, "class", "timeline-panel");
			attr(div13, "class", "timeline-heading");
			attr(a1, "href", "");
			attr(p4, "class", "text-muted");
			attr(div14, "class", "timeline-body");
			attr(div15, "class", "timeline-panel");
			attr(ul, "class", "timeline-inverted svelte-15tjc6v");
			attr(div16, "class", "container");
			attr(section, "class", "page-section svelte-15tjc6v");
			attr(section, "id", "issues");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div16);
			append(div16, div0);
			append(div0, h2);
			append(h2, t0);
			append(div0, t1);
			append(div0, h30);
			append(h30, t2);
			append(div16, t3);
			append(div16, ul);
			append(ul, li0);
			append(li0, div3);
			append(div3, div1);
			append(div1, h31);
			append(h31, t4);
			append(div1, t5);
			append(div1, h40);
			append(h40, t6);
			append(div3, t7);
			append(div3, div2);
			append(div2, p0);
			append(p0, t8);
			append(ul, t9);
			append(ul, li1);
			append(li1, div6);
			append(div6, div4);
			append(div4, h32);
			append(h32, t10);
			append(div4, t11);
			append(div4, h41);
			append(h41, t12);
			append(div6, t13);
			append(div6, div5);
			append(div5, p1);
			append(p1, t14);
			append(ul, t15);
			append(ul, li2);
			append(li2, div9);
			append(div9, div7);
			append(div7, h33);
			append(h33, t16);
			append(div7, t17);
			append(div7, h42);
			append(h42, t18);
			append(div9, t19);
			append(div9, div8);
			append(div8, p2);
			append(p2, t20);
			append(ul, t21);
			append(ul, li3);
			append(li3, div12);
			append(div12, div10);
			append(div10, h34);
			append(h34, t22);
			append(div12, t23);
			append(div12, div11);
			append(div11, p3);
			append(p3, a0);
			append(a0, t24);
			append(ul, t25);
			append(ul, li4);
			append(li4, div15);
			append(div15, div13);
			append(div13, h35);
			append(h35, t26);
			append(div15, t27);
			append(div15, div14);
			append(div14, p4);
			append(p4, a1);
			append(a1, t28);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;