/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let section;
	let div5;
	let div0;
	let h2;
	let t0;
	let t1;
	let h3;
	let t2;
	let t3;
	let div4;
	let div1;
	let span0;
	let i0;
	let t4;
	let i1;
	let t5;
	let h40;
	let t6;
	let t7;
	let p0;
	let t8;
	let t9;
	let div2;
	let span1;
	let i2;
	let t10;
	let i3;
	let t11;
	let h41;
	let t12;
	let t13;
	let p1;
	let t14;
	let t15;
	let div3;
	let span2;
	let i4;
	let t16;
	let i5;
	let t17;
	let h42;
	let t18;
	let t19;
	let p2;
	let t20;

	return {
		c() {
			section = element("section");
			div5 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text("Services");
			t1 = space();
			h3 = element("h3");
			t2 = text("Lorem ipsum dolor sit amet consectetur.");
			t3 = space();
			div4 = element("div");
			div1 = element("div");
			span0 = element("span");
			i0 = element("i");
			t4 = space();
			i1 = element("i");
			t5 = space();
			h40 = element("h4");
			t6 = text("E-Commerce");
			t7 = space();
			p0 = element("p");
			t8 = text("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			t9 = space();
			div2 = element("div");
			span1 = element("span");
			i2 = element("i");
			t10 = space();
			i3 = element("i");
			t11 = space();
			h41 = element("h4");
			t12 = text("Responsive Design");
			t13 = space();
			p1 = element("p");
			t14 = text("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			t15 = space();
			div3 = element("div");
			span2 = element("span");
			i4 = element("i");
			t16 = space();
			i5 = element("i");
			t17 = space();
			h42 = element("h4");
			t18 = text("Web Security");
			t19 = space();
			p2 = element("p");
			t20 = text("Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true, id: true });
			var section_nodes = children(section);
			div5 = claim_element(section_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, "Services");
			h2_nodes.forEach(detach);
			t1 = claim_space(div0_nodes);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, "Lorem ipsum dolor sit amet consectetur.");
			h3_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t3 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span0 = claim_element(div1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			i0 = claim_element(span0_nodes, "I", { class: true });
			children(i0).forEach(detach);
			t4 = claim_space(span0_nodes);
			i1 = claim_element(span0_nodes, "I", { class: true });
			children(i1).forEach(detach);
			span0_nodes.forEach(detach);
			t5 = claim_space(div1_nodes);
			h40 = claim_element(div1_nodes, "H4", { class: true });
			var h40_nodes = children(h40);
			t6 = claim_text(h40_nodes, "E-Commerce");
			h40_nodes.forEach(detach);
			t7 = claim_space(div1_nodes);
			p0 = claim_element(div1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t8 = claim_text(p0_nodes, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			p0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			t9 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			span1 = claim_element(div2_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			i2 = claim_element(span1_nodes, "I", { class: true });
			children(i2).forEach(detach);
			t10 = claim_space(span1_nodes);
			i3 = claim_element(span1_nodes, "I", { class: true });
			children(i3).forEach(detach);
			span1_nodes.forEach(detach);
			t11 = claim_space(div2_nodes);
			h41 = claim_element(div2_nodes, "H4", { class: true });
			var h41_nodes = children(h41);
			t12 = claim_text(h41_nodes, "Responsive Design");
			h41_nodes.forEach(detach);
			t13 = claim_space(div2_nodes);
			p1 = claim_element(div2_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t14 = claim_text(p1_nodes, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			p1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			t15 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			span2 = claim_element(div3_nodes, "SPAN", { class: true });
			var span2_nodes = children(span2);
			i4 = claim_element(span2_nodes, "I", { class: true });
			children(i4).forEach(detach);
			t16 = claim_space(span2_nodes);
			i5 = claim_element(span2_nodes, "I", { class: true });
			children(i5).forEach(detach);
			span2_nodes.forEach(detach);
			t17 = claim_space(div3_nodes);
			h42 = claim_element(div3_nodes, "H4", { class: true });
			var h42_nodes = children(h42);
			t18 = claim_text(h42_nodes, "Web Security");
			h42_nodes.forEach(detach);
			t19 = claim_space(div3_nodes);
			p2 = claim_element(div3_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t20 = claim_text(p2_nodes, "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minima maxime quam architecto quo inventore harum ex magni, dicta impedit.");
			p2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			div5_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h2, "class", "section-heading text-uppercase");
			attr(h3, "class", "section-subheading text-muted");
			attr(div0, "class", "text-center");
			attr(i0, "class", "fas fa-circle fa-stack-2x text-primary");
			attr(i1, "class", "fas fa-shopping-cart fa-stack-1x fa-inverse");
			attr(span0, "class", "fa-stack fa-4x");
			attr(h40, "class", "my-3");
			attr(p0, "class", "text-muted");
			attr(div1, "class", "col-md-4");
			attr(i2, "class", "fas fa-circle fa-stack-2x text-primary");
			attr(i3, "class", "fas fa-laptop fa-stack-1x fa-inverse");
			attr(span1, "class", "fa-stack fa-4x");
			attr(h41, "class", "my-3");
			attr(p1, "class", "text-muted");
			attr(div2, "class", "col-md-4");
			attr(i4, "class", "fas fa-circle fa-stack-2x text-primary");
			attr(i5, "class", "fas fa-lock fa-stack-1x fa-inverse");
			attr(span2, "class", "fa-stack fa-4x");
			attr(h42, "class", "my-3");
			attr(p2, "class", "text-muted");
			attr(div3, "class", "col-md-4");
			attr(div4, "class", "row text-center");
			attr(div5, "class", "container");
			attr(section, "class", "page-section");
			attr(section, "id", "services");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div5);
			append(div5, div0);
			append(div0, h2);
			append(h2, t0);
			append(div0, t1);
			append(div0, h3);
			append(h3, t2);
			append(div5, t3);
			append(div5, div4);
			append(div4, div1);
			append(div1, span0);
			append(span0, i0);
			append(span0, t4);
			append(span0, i1);
			append(div1, t5);
			append(div1, h40);
			append(h40, t6);
			append(div1, t7);
			append(div1, p0);
			append(p0, t8);
			append(div4, t9);
			append(div4, div2);
			append(div2, span1);
			append(span1, i2);
			append(span1, t10);
			append(span1, i3);
			append(div2, t11);
			append(div2, h41);
			append(h41, t12);
			append(div2, t13);
			append(div2, p1);
			append(p1, t14);
			append(div4, t15);
			append(div4, div3);
			append(div3, span2);
			append(span2, i4);
			append(span2, t16);
			append(span2, i5);
			append(div3, t17);
			append(div3, h42);
			append(h42, t18);
			append(div3, t19);
			append(div3, p2);
			append(p2, t20);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;